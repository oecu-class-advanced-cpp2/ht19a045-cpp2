#include <iostream>

#define CPP2_PRIME_UPPER_LIMIT 1000000 //探索する値の上限値。
/* --------------------------------------------------------------- */
/*
* nth_prime
*
* 与えられた正整数 a と d と n に対して、この等差数列に含まれる n 番目の
* 素数を返す。
*
* TODO: この nth_prime 関数を実装せよ。必要であれば他に関数や
* ファイルを作成せよ。
*/
/* -------------------------------------------------------------- */
int nth_prime(unsigned int a, unsigned int d, unsigned int n);
int main() {
	//int a, b, c;
	//for (;;) {
	//	std::cin >> a >> b >> c;
	//	if ((a == 0 && b == 0) && c == 0)
	//		break;
		std::cout << "here" << nth_prime(367, 186, 151) << std::endl;
	//}
	// 以下、同様に、入出力例通りになるか確認せよ。
	return 0;
}

int nth_prime(unsigned int a, unsigned int d, unsigned int n)
{
	int myArray[1000000];
	for (int i = 0; i < 1000000; i++)
	{
		myArray[i] = a + (i*d);
	}
	return myArray[n];
}

